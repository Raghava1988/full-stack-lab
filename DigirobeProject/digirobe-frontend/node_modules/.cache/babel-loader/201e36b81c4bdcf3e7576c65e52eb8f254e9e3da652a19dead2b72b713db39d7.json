{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragha\\\\myntra-clone-microservices\\\\frontend\\\\src\\\\components\\\\ProductCatalog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AlertMessage from './common/AlertMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCatalog = ({\n  token,\n  handleLogout\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cartSuccessMessage, setCartSuccessMessage] = useState('');\n  const handleAddToCart = async productId => {\n    setCartSuccessMessage('');\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8082/api/cart/items', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          productId: productId,\n          quantity: 1\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to add item to cart.');\n      }\n      setCartSuccessMessage('Item added to cart successfully!');\n      setTimeout(() => setCartSuccessMessage(''), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('http://localhost:8081/api/products');\n        if (!response.ok) throw new Error(`Failed to fetch products. Status: ${response.status}`);\n        const data = await response.json();\n        setProducts(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-6 sm:px-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-white mb-6\",\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-400\",\n        children: \"Loading products...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }, this), error && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: `Error: ${error}`,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this), cartSuccessMessage && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: cartSuccessMessage,\n        type: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductCatalog, \"BZTnlg2d9/A2FF4neTpWA8SHnEc=\");\n_c = ProductCatalog;\nexport default ProductCatalog;\nvar _c;\n$RefreshReg$(_c, \"ProductCatalog\");","map":{"version":3,"names":["React","useState","useEffect","AlertMessage","jsxDEV","_jsxDEV","ProductCatalog","token","handleLogout","_s","products","setProducts","isLoading","setIsLoading","error","setError","cartSuccessMessage","setCartSuccessMessage","handleAddToCart","productId","response","fetch","method","headers","body","JSON","stringify","quantity","ok","errorData","json","Error","message","setTimeout","err","fetchProducts","status","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/ragha/myntra-clone-microservices/frontend/src/components/ProductCatalog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AlertMessage from './common/AlertMessage';\r\n\r\nconst ProductCatalog = ({ token, handleLogout }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [cartSuccessMessage, setCartSuccessMessage] = useState('');\r\n\r\n    const handleAddToCart = async (productId) => {\r\n        setCartSuccessMessage('');\r\n        setError(null);\r\n        try {\r\n            const response = await fetch('http://localhost:8082/api/cart/items', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ productId: productId, quantity: 1 })\r\n            });\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to add item to cart.');\r\n            }\r\n            setCartSuccessMessage('Item added to cart successfully!');\r\n            setTimeout(() => setCartSuccessMessage(''), 3000);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            try {\r\n                const response = await fetch('http://localhost:8081/api/products');\r\n                if (!response.ok) throw new Error(`Failed to fetch products. Status: ${response.status}`);\r\n                const data = await response.json();\r\n                setProducts(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"px-4 py-6 sm:px-0\">\r\n                <h1 className=\"text-3xl font-bold text-white mb-6\">Products</h1>\r\n                {isLoading && <div className=\"text-center text-gray-400\">Loading products...</div>}\r\n                {error && <AlertMessage message={`Error: ${error}`} type=\"error\" />}\r\n                {cartSuccessMessage && <AlertMessage message={cartSuccessMessage} type=\"success\" />}\r\n                \r\n                <div className=\"mt-6 grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\r\n                    {/* ... (The product mapping logic remains the same) ... */}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ProductCatalog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}