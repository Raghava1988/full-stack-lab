{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragha\\\\myntra-clone-microservices\\\\frontend\\\\src\\\\components\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport ProductCatalog from './ProductCatalog';\nimport ShoppingBag from './ShoppingBag';\nimport OrderConfirmation from './OrderConfirmation'; // Import new component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  token,\n  handleLogout\n}) => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [cart, setCart] = useState(null);\n  const [currentView, setCurrentView] = useState('catalog'); // 'catalog', 'bag', or 'orderConfirmation'\n  const [placedOrder, setPlacedOrder] = useState(null); // To store details of the last order\n\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const response = await fetch('http://localhost:8082/api/cart', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error('Failed to fetch cart');\n        const data = await response.json();\n        setCart(data);\n      } catch (error) {\n        console.error(\"Error fetching cart:\", error);\n      }\n    };\n    // Only fetch the cart if we are not in the confirmation view\n    if (currentView !== 'orderConfirmation') {\n      fetchCart();\n    }\n  }, [token, currentView]);\n  const handleSelectCategory = category => {\n    setSelectedCategory(category);\n    setCurrentView('catalog');\n  };\n  const handleCartUpdate = updatedCart => {\n    setCart(updatedCart);\n  };\n  const handleNavigate = view => {\n    setCurrentView(view);\n  };\n  const handleOrderPlaced = order => {\n    setPlacedOrder(order);\n    setCart(null); // Clear the cart state after placing order\n    setCurrentView('orderConfirmation');\n  };\n  const renderContent = () => {\n    switch (currentView) {\n      case 'bag':\n        return /*#__PURE__*/_jsxDEV(ShoppingBag, {\n          token: token,\n          cart: cart,\n          onCartUpdate: handleCartUpdate,\n          onOrderPlaced: handleOrderPlaced\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this);\n      case 'orderConfirmation':\n        return /*#__PURE__*/_jsxDEV(OrderConfirmation, {\n          order: placedOrder,\n          onNavigate: handleNavigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this);\n      case 'catalog':\n      default:\n        return /*#__PURE__*/_jsxDEV(ProductCatalog, {\n          token: token,\n          category: selectedCategory,\n          onAddToCartSuccess: handleCartUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  const cartItemCount = cart ? cart.items.reduce((sum, item) => sum + item.quantity, 0) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      handleLogout: handleLogout,\n      onSelectCategory: handleSelectCategory,\n      cartItemCount: cartItemCount,\n      onNavigate: handleNavigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"bt+gBiqCABbaog77TIfO6d/Ys2M=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Header","ProductCatalog","ShoppingBag","OrderConfirmation","jsxDEV","_jsxDEV","HomePage","token","handleLogout","_s","selectedCategory","setSelectedCategory","cart","setCart","currentView","setCurrentView","placedOrder","setPlacedOrder","fetchCart","response","fetch","headers","ok","Error","data","json","error","console","handleSelectCategory","category","handleCartUpdate","updatedCart","handleNavigate","view","handleOrderPlaced","order","renderContent","onCartUpdate","onOrderPlaced","fileName","_jsxFileName","lineNumber","columnNumber","onNavigate","onAddToCartSuccess","cartItemCount","items","reduce","sum","item","quantity","className","children","onSelectCategory","_c","$RefreshReg$"],"sources":["C:/Users/ragha/myntra-clone-microservices/frontend/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport ProductCatalog from './ProductCatalog';\r\nimport ShoppingBag from './ShoppingBag';\r\nimport OrderConfirmation from './OrderConfirmation'; // Import new component\r\n\r\nconst HomePage = ({ token, handleLogout }) => {\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [cart, setCart] = useState(null);\r\n    const [currentView, setCurrentView] = useState('catalog'); // 'catalog', 'bag', or 'orderConfirmation'\r\n    const [placedOrder, setPlacedOrder] = useState(null); // To store details of the last order\r\n\r\n    useEffect(() => {\r\n        const fetchCart = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8082/api/cart', {\r\n                    headers: { 'Authorization': `Bearer ${token}` }\r\n                });\r\n                if (!response.ok) throw new Error('Failed to fetch cart');\r\n                const data = await response.json();\r\n                setCart(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching cart:\", error);\r\n            }\r\n        };\r\n        // Only fetch the cart if we are not in the confirmation view\r\n        if (currentView !== 'orderConfirmation') {\r\n            fetchCart();\r\n        }\r\n    }, [token, currentView]);\r\n\r\n    const handleSelectCategory = (category) => {\r\n        setSelectedCategory(category);\r\n        setCurrentView('catalog');\r\n    };\r\n    \r\n    const handleCartUpdate = (updatedCart) => {\r\n        setCart(updatedCart);\r\n    };\r\n\r\n    const handleNavigate = (view) => {\r\n        setCurrentView(view);\r\n    };\r\n\r\n    const handleOrderPlaced = (order) => {\r\n        setPlacedOrder(order);\r\n        setCart(null); // Clear the cart state after placing order\r\n        setCurrentView('orderConfirmation');\r\n    };\r\n\r\n    const renderContent = () => {\r\n        switch(currentView) {\r\n            case 'bag':\r\n                return <ShoppingBag token={token} cart={cart} onCartUpdate={handleCartUpdate} onOrderPlaced={handleOrderPlaced} />;\r\n            case 'orderConfirmation':\r\n                return <OrderConfirmation order={placedOrder} onNavigate={handleNavigate} />;\r\n            case 'catalog':\r\n            default:\r\n                return <ProductCatalog token={token} category={selectedCategory} onAddToCartSuccess={handleCartUpdate} />;\r\n        }\r\n    };\r\n\r\n    const cartItemCount = cart ? cart.items.reduce((sum, item) => sum + item.quantity, 0) : 0;\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 min-h-screen\">\r\n            <Header \r\n                handleLogout={handleLogout} \r\n                onSelectCategory={handleSelectCategory}\r\n                cartItemCount={cartItemCount}\r\n                onNavigate={handleNavigate}\r\n            />\r\n            <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n                {renderContent()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC3DC,OAAO,EAAE;YAAE,eAAe,EAAE,UAAUd,KAAK;UAAG;QAClD,CAAC,CAAC;QACF,IAAI,CAACY,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzD,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCZ,OAAO,CAACW,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IACD;IACA,IAAIZ,WAAW,KAAK,mBAAmB,EAAE;MACrCI,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACX,KAAK,EAAEO,WAAW,CAAC,CAAC;EAExB,MAAMc,oBAAoB,GAAIC,QAAQ,IAAK;IACvClB,mBAAmB,CAACkB,QAAQ,CAAC;IAC7Bd,cAAc,CAAC,SAAS,CAAC;EAC7B,CAAC;EAED,MAAMe,gBAAgB,GAAIC,WAAW,IAAK;IACtClB,OAAO,CAACkB,WAAW,CAAC;EACxB,CAAC;EAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC7BlB,cAAc,CAACkB,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjClB,cAAc,CAACkB,KAAK,CAAC;IACrBtB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACfE,cAAc,CAAC,mBAAmB,CAAC;EACvC,CAAC;EAED,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IACxB,QAAOtB,WAAW;MACd,KAAK,KAAK;QACN,oBAAOT,OAAA,CAACH,WAAW;UAACK,KAAK,EAAEA,KAAM;UAACK,IAAI,EAAEA,IAAK;UAACyB,YAAY,EAAEP,gBAAiB;UAACQ,aAAa,EAAEJ;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtH,KAAK,mBAAmB;QACpB,oBAAOrC,OAAA,CAACF,iBAAiB;UAACgC,KAAK,EAAEnB,WAAY;UAAC2B,UAAU,EAAEX;QAAe;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAChF,KAAK,SAAS;MACd;QACI,oBAAOrC,OAAA,CAACJ,cAAc;UAACM,KAAK,EAAEA,KAAM;UAACsB,QAAQ,EAAEnB,gBAAiB;UAACkC,kBAAkB,EAAEd;QAAiB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACjH;EACJ,CAAC;EAED,MAAMG,aAAa,GAAGjC,IAAI,GAAGA,IAAI,CAACkC,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC;EAEzF,oBACI7C,OAAA;IAAK8C,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrC/C,OAAA,CAACL,MAAM;MACHQ,YAAY,EAAEA,YAAa;MAC3B6C,gBAAgB,EAAEzB,oBAAqB;MACvCiB,aAAa,EAAEA,aAAc;MAC7BF,UAAU,EAAEX;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFrC,OAAA;MAAK8C,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EAClDhB,aAAa,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjC,EAAA,CAvEIH,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AAyEd,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}