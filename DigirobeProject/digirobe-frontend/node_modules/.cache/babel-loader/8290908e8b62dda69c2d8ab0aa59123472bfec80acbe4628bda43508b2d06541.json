{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragha\\\\myntra-clone-microservices\\\\frontend\\\\src\\\\components\\\\CheckoutPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FormInput from './common/FormInput';\nimport AlertMessage from './common/AlertMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutPage = ({\n  token,\n  onOrderPlaced\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [shippingAddress, setShippingAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [isPlacingOrder, setIsPlacingOrder] = useState(false);\n  const [error, setError] = useState(null);\n  const handleConfirmOrder = async e => {\n    e.preventDefault();\n    setIsPlacingOrder(true);\n    setError(null);\n    try {\n      // This is the data object we will send.\n      // The keys here MUST match the field names in the CreateOrderRequest DTO.\n      const orderPayload = {\n        name,\n        phoneNumber,\n        shippingAddress,\n        city,\n        zipCode\n      };\n      const response = await fetch('http://localhost:8083/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(orderPayload)\n      });\n\n      // Handle non-ok responses first\n      if (!response.ok) {\n        // Try to get a specific error message from the backend if possible\n        const errorData = await response.json().catch(() => ({\n          message: `Request failed with status: ${response.status}`\n        }));\n        throw new Error(errorData.message || 'Failed to place order.');\n      }\n      const orderData = await response.json();\n      onOrderPlaced(orderData);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsPlacingOrder(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto bg-white p-8 rounded-lg shadow-md border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Confirm Your Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleConfirmOrder,\n      className: \"space-y-6\",\n      children: [error && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: error,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"name\",\n        type: \"text\",\n        label: \"Full Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"phoneNumber\",\n        type: \"tel\",\n        label: \"Phone Number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"123-456-7890\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"shippingAddress\",\n        type: \"text\",\n        label: \"Shipping Address\",\n        value: shippingAddress,\n        onChange: e => setShippingAddress(e.target.value),\n        placeholder: \"123 Vision St\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"city\",\n        type: \"text\",\n        label: \"City\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Styleburg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"zipCode\",\n        type: \"text\",\n        label: \"Zip Code\",\n        value: zipCode,\n        onChange: e => setZipCode(e.target.value),\n        placeholder: \"54321\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isPlacingOrder,\n          className: \"w-full mt-4 bg-slate-700 text-white py-3 rounded-md font-bold hover:bg-slate-800 disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: isPlacingOrder ? 'Confirming...' : 'Confirm & Pay'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckoutPage, \"EJrmXVvCk6k65vTqV4ANgbhIpjM=\");\n_c = CheckoutPage;\nexport default CheckoutPage;\nvar _c;\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"names":["React","useState","FormInput","AlertMessage","jsxDEV","_jsxDEV","CheckoutPage","token","onOrderPlaced","_s","name","setName","phoneNumber","setPhoneNumber","shippingAddress","setShippingAddress","city","setCity","zipCode","setZipCode","isPlacingOrder","setIsPlacingOrder","error","setError","handleConfirmOrder","e","preventDefault","orderPayload","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","catch","message","status","Error","orderData","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","label","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ragha/myntra-clone-microservices/frontend/src/components/CheckoutPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FormInput from './common/FormInput';\r\nimport AlertMessage from './common/AlertMessage';\r\n\r\nconst CheckoutPage = ({ token, onOrderPlaced }) => {\r\n    const [name, setName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [shippingAddress, setShippingAddress] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [zipCode, setZipCode] = useState('');\r\n    const [isPlacingOrder, setIsPlacingOrder] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleConfirmOrder = async (e) => {\r\n        e.preventDefault();\r\n        setIsPlacingOrder(true);\r\n        setError(null);\r\n        try {\r\n            // This is the data object we will send.\r\n            // The keys here MUST match the field names in the CreateOrderRequest DTO.\r\n            const orderPayload = {\r\n                name,\r\n                phoneNumber,\r\n                shippingAddress,\r\n                city,\r\n                zipCode\r\n            };\r\n\r\n            const response = await fetch('http://localhost:8083/api/orders', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify(orderPayload)\r\n            });\r\n\r\n            // Handle non-ok responses first\r\n            if (!response.ok) {\r\n                // Try to get a specific error message from the backend if possible\r\n                const errorData = await response.json().catch(() => ({ message: `Request failed with status: ${response.status}` }));\r\n                throw new Error(errorData.message || 'Failed to place order.');\r\n            }\r\n            \r\n            const orderData = await response.json();\r\n            onOrderPlaced(orderData);\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsPlacingOrder(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-2xl mx-auto bg-white p-8 rounded-lg shadow-md border border-gray-200\">\r\n            <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Confirm Your Details</h1>\r\n            <form onSubmit={handleConfirmOrder} className=\"space-y-6\">\r\n                {error && <AlertMessage message={error} type=\"error\" />}\r\n                <FormInput id=\"name\" type=\"text\" label=\"Full Name\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Your Name\" />\r\n                <FormInput id=\"phoneNumber\" type=\"tel\" label=\"Phone Number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"123-456-7890\" />\r\n                <FormInput id=\"shippingAddress\" type=\"text\" label=\"Shipping Address\" value={shippingAddress} onChange={(e) => setShippingAddress(e.target.value)} placeholder=\"123 Vision St\" />\r\n                <FormInput id=\"city\" type=\"text\" label=\"City\" value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Styleburg\" />\r\n                <FormInput id=\"zipCode\" type=\"text\" label=\"Zip Code\" value={zipCode} onChange={(e) => setZipCode(e.target.value)} placeholder=\"54321\" />\r\n                <div>\r\n                    <button \r\n                        type=\"submit\"\r\n                        disabled={isPlacingOrder}\r\n                        className=\"w-full mt-4 bg-slate-700 text-white py-3 rounded-md font-bold hover:bg-slate-800 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {isPlacingOrder ? 'Confirming...' : 'Confirm & Pay'}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckoutPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}